/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Friendship as PrismaFriendship } from "@prisma/client";

export class FriendshipServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FriendshipCountArgs, "select">
  ): Promise<number> {
    return this.prisma.friendship.count(args);
  }

  async friendships(
    args: Prisma.FriendshipFindManyArgs
  ): Promise<PrismaFriendship[]> {
    return this.prisma.friendship.findMany(args);
  }
  async friendship(
    args: Prisma.FriendshipFindUniqueArgs
  ): Promise<PrismaFriendship | null> {
    return this.prisma.friendship.findUnique(args);
  }
  async createFriendship(
    args: Prisma.FriendshipCreateArgs
  ): Promise<PrismaFriendship> {
    return this.prisma.friendship.create(args);
  }
  async updateFriendship(
    args: Prisma.FriendshipUpdateArgs
  ): Promise<PrismaFriendship> {
    return this.prisma.friendship.update(args);
  }
  async deleteFriendship(
    args: Prisma.FriendshipDeleteArgs
  ): Promise<PrismaFriendship> {
    return this.prisma.friendship.delete(args);
  }
}
